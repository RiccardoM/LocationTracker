apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 27

    signingConfigs {
        release {
            keyAlias LOCATION_TRACKER_KEY_ALIAS
            keyPassword LOCATION_TRACKER_KEY_PASSWORD
            storeFile file(LOCATION_TRACKER_KEYSTORE_FILE)
            storePassword LOCATION_TRACKER_KEYSTORE_PASSWORD
        }
    }


    defaultConfig {
        applicationId "it.riccardomontagnin.locationtracker"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    kapt { generateStubs = true }
    androidExtensions { experimental = true }

}

dependencies {
    // Default Android libraries
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation 'com.android.support:design:27.1.1'

    // ThirtyInch to implement the MVP pattern
    def thirtyInchVersion = '0.8.5'
    implementation "net.grandcentrix.thirtyinch:thirtyinch:$thirtyInchVersion"
    implementation "net.grandcentrix.thirtyinch:thirtyinch-rx2:$thirtyInchVersion"

    // RxJava and RxAndroid for the Observable Pattern
    implementation 'io.reactivex.rxjava2:rxjava:2.1.14'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

    // Dagger for the dependency injection
    implementation 'com.google.dagger:dagger:2.16'
    kapt 'com.google.dagger:dagger-compiler:2.16'

    // Google Play Services
    implementation 'com.google.android.gms:play-services-location:15.0.1'
    implementation 'com.google.android.gms:play-services-maps:15.0.1'

    // Timber for easier debug logs
    implementation 'com.jakewharton.timber:timber:4.7.0'

    // EventBus in order to get events from the Service to the repository
    implementation 'org.greenrobot:eventbus:3.1.1'

    // Gson in order to serialize each object as a String
    implementation 'com.google.code.gson:gson:2.8.4'

    // Room for persistence
    def room_version = "1.1.0"
    implementation "android.arch.persistence.room:runtime:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"
    implementation "android.arch.persistence.room:rxjava2:$room_version"

    // Crashlytics for crash identifications
    compile('com.crashlytics.sdk.android:crashlytics:2.9.3@aar') {
        transitive = true;
    }

    // Testing libraries
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
